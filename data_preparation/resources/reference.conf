# We use HOCON to provide configurations for our datasets

project {
  name = "data.prep.python"
  description = "taking care of MDedup project"
}
datasets = [
//    "cddb",
    "restaurants",
//    "census",
//    "movies"
//    "cora",
//    "hotels"
]

ndpl_method = "blocking"

sampling_percentage = 0.1
# ndpl_to_dpl_ratio = 10.0 # If else worse try this again.
ndpl_to_dpl_ratio = 1000000.0
#ndpl_to_dpl_ratio = 1.0


all_preparators = [
    # * cleaning - generic *
    "remove_special_characters",
    "normalize_address",
    "split_attribute",
    "merge_attributes",
    "transliterate",
    "geocode",
    "syllabify",

    # * cleaning - specialized *
    "phonetic_encode",
    "capitalize",
    "stem",
    "acronymize"
]

classifiers = [
    # "RANDOM_FOREST",
    "THRESHOLD",
    # "LOGISTIC_REGRESSION",
    # "KNN",
    # "SUPPORT_VECTOR_MACHINES"
]

# jokoum-laptop
dprep_base_dir = "/Users/lanli/FD_CFD_extraction/data_preparation/"
database_ip = "localhost"
database_connection_port="3306"
java_vm_parameters = "-Xmx12g"

# isfet + seschat
#dprep_base_dir = "/home/ioannis.koumarelas/projects/dataprepdedup/"  # isfet
#database_ip = "172.16.64.11" # seschat
#database_connection_port="3306"
#java_vm_parameters = "-Xmx80g"

# seschat
#dprep_base_dir = "/home/ioannis.koumarelas/projects/dataprepdedup/"  # isfet
#database_ip = "localhost"
#database_connection_port="3306"
#java_vm_parameters = "-Xmx20g"

workspace_dir_base = ${dprep_base_dir}"workspace/"
base_data_dir = ${dprep_base_dir}"data/"

database_schemaname = "dataprepdedup"
database_username = "root"
database_password = "llykl0808"
database_driver="com.mysql.cj.jdbc.Driver"
database_connection_url="jdbc:mysql://"${database_ip}":"${database_connection_port}"/"${database_schemaname}"?testOnBorrow=true&useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"

csvsql = "/home/jokoum/anaconda3/bin/csvsql"

dataprepdedup_jar = ${dprep_base_dir}"code/data.prep.dedup.java/target/data.prep.dedup-1.0-SNAPSHOT-jar-with-dependencies.jar"

datasets_info = {
//    "cddb": {
//        "dataset": ${base_data_dir}"cddb.tsv",
//        "dpl": ${workspace_dir_base}"cddb_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//        "ndpl": ${workspace_dir_base}"cddb_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//        "attributes": ["artist", "category", "genre", "title", "tracks", "year", "merged_values"]  # ["artist", "dtitle"]
//    },
//    "cora": {
//        "dataset": ${base_data_dir}"cora.tsv",
//        "dpl": ${workspace_dir_base}"cora_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//        "ndpl": ${workspace_dir_base}"cora_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//        "attributes": ["address", "authors", "date", "pages", "title", "merged_values"]
//    },
    "census": {
        "dataset": ${base_data_dir}"census.tsv",
        "dpl": ${workspace_dir_base}"census_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
        "ndpl": ${workspace_dir_base}"census_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
        "attributes": ["text", "first_name", "last_name", "middle_name", "street_address", "zip", "merged_values"]
    },
//    "hotels": {
//        "dataset": ${base_data_dir}"data_hotels_8countries_original.tsv",
//        "dataset_geocoded": ${base_data_dir}"hotels_nominatim_addressnormalized.sqlite", # ""data_hotels_8countries_cfd_nominatim_geocoded",
//        "dpl": ${workspace_dir_base}"hotels_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//        "ndpl_original": ${base_data_dir}"hotels_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//        "ndpl": ${workspace_dir_base}"hotels_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//        "attributes": ["hotel_name", "street_address1", "city", "zip", "state_code", "country_code", "latitude_longitude", "merged_values"]
//    },
//    "imdb_tmdb":{
//      "dataset": ${base_data_dir}"imdb_tmdb.tsv",
//      "dpl":${workspace_dir_base}"imdb_tmdb_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//      "ndpl":${workspace_dir_base}"imdb_tmdb_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//      "attributes": ["budget", "genres_names", "original_language", "overview", "popularity", "production_companies_names",
//      "production_countries_names", "release_date", "spoken_languages_names","tagline", "title", "cast_names", "crew_names", "merged_values"]
//    }
//    "movies": {
//        "dataset": ${base_data_dir}"movies.tsv",
//        "dpl": ${workspace_dir_base}"movies_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//        "ndpl": ${workspace_dir_base}"movies_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//        "attributes": ["actors", "title", "merged_values"]
//    },
//    "movies_metablocking": {
//      "dataset": ${base_data_dir}"movies_metablocking.tsv",
//      "dpl": ${workspace_dir_base}"movies_metablocking_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
//      "ndpl": ${workspace_dir_base}"movies_metablocking_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
//      "attributes": ["director_name", "actor_name", "year", "genre", "starring", "writer", "title", "merged_values"]
//    }
    "restaurants": {
        "dataset": ${base_data_dir}"restaurants.tsv",
        "dpl": ${workspace_dir_base}"restaurants_goldstandard_DPL_pairs_MongeElkanLevenshtein.tsv",
        "ndpl": ${workspace_dir_base}"restaurants_goldstandard_NDPL_pairs_BLOCKING_10_MongeElkanLevenshtein.tsv",
        "attributes": ["name", "address", "city", "phone", "type", "merged_values"]
    },
}

preparators_info = {
   "split_attribute": {
       "enum_id": 4,
       "type": "cleaning",
       "deduplication_specific": False,
       "order": 1
   }, "normalize_address": {
       "enum_id": 2,
       "type": "cleaning",
       "deduplication_specific": False,
       "order": 2
   } , "geocode": {
        "enum_id": 3,
        "type": "cleaning",
        "deduplication_specific": False,
        "order": 3
  }, "remove_special_characters": {
      "enum_id": 1,
      "type": "cleaning",
      "deduplication_specific": False,
      "order": 4,
  }, "transliterate": {
      "enum_id": 5,
      "type": "cleaning",
      "deduplication_specific": False,
      "order": 5
  }, "merge_attributes": {
      "enum_id": 6,
      "type": "cleaning",
      "deduplication_specific": False,
      "order": 6
  },

  "capitalize": {
      "enum_id": 7,
      "type": "similarity",
      "deduplication_specific": True,
      "order": 100  # Deduplication/virtual
  }, "stem": {
      "enum_id": 8,
      "type": "similarity",
      "deduplication_specific": True,
      "order": 100
  },"phonetic_encode": {
      "enum_id": 9,
      "type": "similarity",
      "deduplication_specific": True,
      "order": 100
  },
  "syllabify": {
      "enum_id": 10,
      "type": "similarity",
      "deduplication_specific": True,
      "order": 100
  },"acronymize": {
      "enum_id": 11,
      "type": "similarity",
      "deduplication_specific": True,
      "order": 100
  },
}